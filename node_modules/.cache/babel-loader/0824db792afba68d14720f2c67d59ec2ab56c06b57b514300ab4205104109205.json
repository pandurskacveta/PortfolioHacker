{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandu\\\\Desktop\\\\YEAR 2\\\\PERSONAL PORTFOLIO\\\\personal-portfolio\\\\src\\\\components\\\\Quotes.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quotes = () => {\n  _s();\n  // show the quote\n  const [quote, setQuote] = useState(\"\");\n  // show the author of the quote\n  const [author, setAuthor] = useState(\"\");\n  const quoteAPI = async () => {\n    // creating the array for quotes\n    let arrayOfQuotes = [];\n    try {\n      // grabing a random quote each time\n      const data = await axios.get(\"https://api.quotable.io/random\");\n      arrayOfQuotes = data.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    // catching an error, if there is one\n    try {\n      setQuote(arrayOfQuotes.content);\n      setAuthor(arrayOfQuotes.author);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // running the function\n  useEffect(() => {\n    quoteAPI();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"QuotesSection\",\n    id: \"QuotesSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Since our personal and professional lives are so dynamic, it is normal for us to get stressed out sometimes and forget about our goals. This is why I created this Quote Generator using an API, in order to give us a little motivation to keep it pushing!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quoteBox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote\",\n          children: quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: [\"-\", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quoteButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: quoteAPI,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Gimme Quote!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Quotes, \"63a70SWBG258FKVbsTTmq1TL57o=\");\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["axios","useEffect","useState","Quotes","quote","setQuote","author","setAuthor","quoteAPI","arrayOfQuotes","data","get","error","console","log","content"],"sources":["C:/Users/pandu/Desktop/YEAR 2/PERSONAL PORTFOLIO/personal-portfolio/src/components/Quotes.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Quotes = () => {\r\n    // show the quote\r\n    const [quote, setQuote] = useState(\"\")\r\n    // show the author of the quote\r\n    const [author, setAuthor] = useState(\"\")\r\n\r\n    const quoteAPI = async() => {\r\n        // creating the array for quotes\r\n        let arrayOfQuotes = [];\r\n        try {\r\n            // grabing a random quote each time\r\n            const data = await axios.get(\"https://api.quotable.io/random\")\r\n            arrayOfQuotes = data.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n        // catching an error, if there is one\r\n        try {\r\n            setQuote(arrayOfQuotes.content)\r\n            setAuthor(arrayOfQuotes.author)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // running the function\r\n    useEffect(() => {\r\n        quoteAPI()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <section className=\"QuotesSection\" id=\"QuotesSection\">\r\n                    <h2>Random Quote Generator</h2>\r\n                    <p>Since our personal and professional lives are so dynamic, it is normal for us to get stressed out sometimes and forget about our goals. This is why I created this Quote Generator using an API, in order to give us a little motivation to keep it pushing!</p>\r\n            <div className=\"quoteBox\">\r\n                <div className=\"quoteContainer\">\r\n                    <div className=\"quote\">\r\n                       {quote}\r\n                    </div>\r\n                    <div className=\"author\">\r\n                       -{author}\r\n                    </div>\r\n                    <div className=\"quoteButton\">\r\n                        <button onClick={quoteAPI}><span>Gimme Quote!</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Quotes"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMM,QAAQ,GAAG,YAAW;IACxB;IACA,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAI;MACA;MACA,MAAMC,IAAI,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,gCAAgC,CAAC;MAC9DF,aAAa,GAAGC,IAAI,CAACA,IAAI;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;;IAEA;IACA,IAAI;MACAP,QAAQ,CAACI,aAAa,CAACM,OAAO,CAAC;MAC/BR,SAAS,CAACE,aAAa,CAACH,MAAM,CAAC;IACnC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACZO,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEI;IAAS,SAAS,EAAC,eAAe;IAAC,EAAE,EAAC,eAAe;IAAA,wBACzC;MAAA,UAAI;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B;MAAA,UAAG;IAA4P;MAAA;MAAA;MAAA;IAAA,QAAI,eAC3Q;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC3B;UAAK,SAAS,EAAC,OAAO;UAAA,UAClBJ;QAAK;UAAA;UAAA;UAAA;QAAA,QACH,eACN;UAAK,SAAS,EAAC,QAAQ;UAAA,WAAC,GACpB,EAACE,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,eACN;UAAK,SAAS,EAAC,aAAa;UAAA,uBACxB;YAAQ,OAAO,EAAEE,QAAS;YAAA,uBAAC;cAAA,UAAM;YAAY;cAAA;cAAA;cAAA;YAAA;UAAO;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAC3D;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAElB,CAAC;AAAA,GAnDKL,MAAM;AAAA,KAANA,MAAM;AAqDZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}