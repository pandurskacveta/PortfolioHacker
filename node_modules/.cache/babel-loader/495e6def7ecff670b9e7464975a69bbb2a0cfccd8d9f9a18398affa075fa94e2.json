{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandu\\\\Desktop\\\\YEAR 2\\\\PERSONAL PORTFOLIO\\\\personal-portfolio\\\\src\\\\components\\\\NavBar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport logo from '../assets/img/logoTransparent.svg';\nimport navBar1 from '../assets/img/search.svg';\nimport navBar2 from '../assets/img/facebook-logo.svg';\nimport navBar3 from '../assets/img/whatsapp.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const [activeLink, setActiveLink] = useState('home');\n  const [scrolled, setScrolled] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n  const onUpdateActiveLink = value => {\n    setActiveLink(value);\n  };\n  const onScroll = () => {\n    if (window.scrollY > 50) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: scrolled ? \"scrolled\" : \"\",\n    children: \"asdasd\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n  //     <Navbar expand=\"lg\" className={ scrolled ? \"scrolled\" : \"\"}> \n  //     <Container>\n  //       <Navbar.Brand href=\"#home\">\n  //         <img src = {logo} alt=\"Logo\" /> \n  //       </Navbar.Brand>\n  //       <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n  //         <span className=\"navbar-toggler-icon\"></span>\n  //       </Navbar.Toggle>\n  //       <Navbar.Collapse id=\"basic-navbar-nav\">\n  //         <Nav className=\"me-auto\">\n  //           <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link> \n  //           <Nav.Link href=\"#skills\" className={activeLink === 'skilss' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>My Skills</Nav.Link>\n  //           <Nav.Link href=\"#projects\" className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>My Projects</Nav.Link>\n  //         </Nav>\n  //         <span className=\"navbar-text\">\n  //             <div className=\"social-icon\">\n  //                 <a href=\"#\"><img src={navBar1} alt=\"\"></img></a>\n  //                 <a href=\"#\"><img src={navBar2} alt=\"\"></img></a>\n  //                 <a href=\"#\"><img src={navBar3} alt=\"\"></img></a>\n  //             </div>\n  //             <button className=\"vvd\" onClick={() => console.log('hey')}><span>Contact Me!</span></button>\n  //         </span>\n  //       </Navbar.Collapse>\n  //     </Container>\n  //   </Navbar>\n  ;\n};\n_s(NavBar, \"Yfna28tTuiQA/LVENnC6lMK53yk=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","Navbar","Container","Nav","useState","useEffect","logo","navBar1","navBar2","navBar3","NavBar","activeLink","setActiveLink","scrolled","setScrolled","window","addEventListener","onScroll","removeEventListener","onUpdateActiveLink","value","scrollY"],"sources":["C:/Users/pandu/Desktop/YEAR 2/PERSONAL PORTFOLIO/personal-portfolio/src/components/NavBar.js"],"sourcesContent":["import React from \"react\"\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\"\r\nimport { useState, useEffect } from \"react\"\r\nimport logo from '../assets/img/logoTransparent.svg'\r\nimport navBar1 from '../assets/img/search.svg'\r\nimport navBar2 from '../assets/img/facebook-logo.svg'\r\nimport navBar3 from '../assets/img/whatsapp.svg'\r\n\r\n\r\n const NavBar = () => {\r\n\r\n    const [activeLink, setActiveLink] = useState('home')\r\n    const [scrolled, setScrolled] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener('scroll', onScroll)\r\n        return () => window.removeEventListener('scroll', onScroll)\r\n    }, [])\r\n\r\n    const onUpdateActiveLink = (value) => {\r\n        setActiveLink(value)\r\n    }\r\n\r\n    const onScroll = () => {\r\n        if (window.scrollY > 50) {\r\n            setScrolled(true)\r\n        } else {\r\n            setScrolled(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div className={ scrolled ? \"scrolled\" : \"\"}>asdasd</div>\r\n    //     <Navbar expand=\"lg\" className={ scrolled ? \"scrolled\" : \"\"}> \r\n    //     <Container>\r\n    //       <Navbar.Brand href=\"#home\">\r\n    //         <img src = {logo} alt=\"Logo\" /> \r\n    //       </Navbar.Brand>\r\n    //       <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n    //         <span className=\"navbar-toggler-icon\"></span>\r\n    //       </Navbar.Toggle>\r\n    //       <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    //         <Nav className=\"me-auto\">\r\n    //           <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link> \r\n    //           <Nav.Link href=\"#skills\" className={activeLink === 'skilss' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>My Skills</Nav.Link>\r\n    //           <Nav.Link href=\"#projects\" className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>My Projects</Nav.Link>\r\n    //         </Nav>\r\n    //         <span className=\"navbar-text\">\r\n    //             <div className=\"social-icon\">\r\n    //                 <a href=\"#\"><img src={navBar1} alt=\"\"></img></a>\r\n    //                 <a href=\"#\"><img src={navBar2} alt=\"\"></img></a>\r\n    //                 <a href=\"#\"><img src={navBar3} alt=\"\"></img></a>\r\n    //             </div>\r\n    //             <button className=\"vvd\" onClick={() => console.log('hey')}><span>Contact Me!</span></button>\r\n    //         </span>\r\n    //       </Navbar.Collapse>\r\n    //     </Container>\r\n    //   </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AACxD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,mCAAmC;AACpD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,OAAO,MAAM,4BAA4B;AAAA;AAG/C,MAAMC,MAAM,GAAG,MAAM;EAAA;EAElB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZU,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,QAAQ,CAAC;IAC3C,OAAO,MAAMF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAED,QAAQ,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,kBAAkB,GAAIC,KAAK,IAAK;IAClCR,aAAa,CAACQ,KAAK,CAAC;EACxB,CAAC;EAED,MAAMH,QAAQ,GAAG,MAAM;IACnB,IAAIF,MAAM,CAACM,OAAO,GAAG,EAAE,EAAE;MACrBP,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACHA,WAAW,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,oBACA;IAAK,SAAS,EAAGD,QAAQ,GAAG,UAAU,GAAG,EAAG;IAAA,UAAC;EAAM;IAAA;IAAA;IAAA;EAAA;EACnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAA,GAlDMH,MAAM;AAAA,KAANA,MAAM;AAoDb,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}