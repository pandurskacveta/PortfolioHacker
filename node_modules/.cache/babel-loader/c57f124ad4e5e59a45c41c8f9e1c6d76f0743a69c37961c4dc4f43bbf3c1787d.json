{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pandu\\\\Desktop\\\\YEAR 2\\\\PERSONAL PORTFOLIO\\\\personal-portfolio\\\\src\\\\components\\\\Projects.js\";\nimport { Col, Container, Nav, Row, Tab, TabContent, TabPane } from \"react-bootstrap\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport apiimg from '../assets/img/api-challenge.png';\nimport booklistpic from '../assets/img/booklist-challenge.png';\nimport dbpic from '../assets/img/database-challenge.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  // pre-defining arrays of objects, in order to generate and display the project cards\n  const projectsProg = [{\n    title: \"Use of Api\",\n    description: \"In this project, I made use of an online API, in order to display the latest information about different countries, including their official name, language currency, population and flag.\",\n    imgUrl: apiimg\n  }, {\n    title: \"Use of Local Storage\",\n    description: \"In this project, for the first time I made use of local storage. By doing that, the user is capable of creating a book list with information about their favorite books, which will not disappear once the page is refreshed. \",\n    imgUrl: booklistpic\n  }, {\n    title: \"Use of Node.js and MongoDB\",\n    description: \"Using Node.js and MongoDB for the first time was not an easy task. However, by completing it, I managed to create an agenda, storing different events, with information about them, editing and deleting them.\",\n    imgUrl: dbpic\n  }];\n  const projectsMedia = [{\n    title: \"bla\",\n    description: \"bla\"\n    // imgUrl: single100suffix.png,\n  }, {\n    title: \"blaa\",\n    description: \"blaa\"\n    // imgUrl: progImg2,\n  }, {\n    title: \"hihi\",\n    description: \"hihi\"\n    // imgUrl: progImg3,\n  }];\n\n  const projectsUX = [{\n    title: \"bla\",\n    description: \"bla\"\n    // imgUrl: single100suffix.png,\n  }, {\n    title: \"blaa\",\n    description: \"blaa\"\n    // imgUrl: progImg2,\n  }, {\n    title: \"hihi\",\n    description: \"hihi\"\n    // imgUrl: progImg3,\n  }];\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"project\",\n    id: \"projects\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"My Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Here you can see some of the work I have done for the semester.  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n            id: \"projects-tabs\",\n            defaultActiveKey: \"first\",\n            children: [/*#__PURE__*/_jsxDEV(Nav, {\n              variant: \"pills\",\n              id: \"pills-tab\",\n              children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n                children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  eventKey: \"first\",\n                  children: \"Web Development\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  eventKey: \"second\",\n                  children: \"UX Design\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  eventKey: \"third\",\n                  children: \"Media Production\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TabContent, {\n              children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                eventKey: \"first\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: projectsProg.map((project, index) => {\n                    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n                      ...project\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                eventKey: \"second\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: projectsUX.map((project, index) => {\n                    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n                      ...project\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                eventKey: \"third\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(Row, {\n                  children: projectsMedia.map((project, index) => {\n                    return /*#__PURE__*/_jsxDEV(ProjectCard, {\n                      ...project\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n// exporting the projects component\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["Col","Container","Nav","Row","Tab","TabContent","TabPane","ProjectCard","apiimg","booklistpic","dbpic","Projects","projectsProg","title","description","imgUrl","projectsMedia","projectsUX","map","project","index"],"sources":["C:/Users/pandu/Desktop/YEAR 2/PERSONAL PORTFOLIO/personal-portfolio/src/components/Projects.js"],"sourcesContent":["import { Col, Container, Nav, Row, Tab, TabContent, TabPane } from \"react-bootstrap\"\r\nimport { ProjectCard } from \"./ProjectCard\"\r\nimport apiimg from '../assets/img/api-challenge.png'\r\nimport booklistpic from '../assets/img/booklist-challenge.png'\r\nimport dbpic from '../assets/img/database-challenge.png'\r\n\r\nconst Projects = () => {\r\n\r\n    // pre-defining arrays of objects, in order to generate and display the project cards\r\n    const projectsProg = [\r\n        {\r\n            title: \"Use of Api\",\r\n            description: \"In this project, I made use of an online API, in order to display the latest information about different countries, including their official name, language currency, population and flag.\",\r\n            imgUrl: apiimg,\r\n        },\r\n        {\r\n            title: \"Use of Local Storage\",\r\n            description: \"In this project, for the first time I made use of local storage. By doing that, the user is capable of creating a book list with information about their favorite books, which will not disappear once the page is refreshed. \",\r\n            imgUrl: booklistpic,\r\n        },\r\n        {\r\n            title: \"Use of Node.js and MongoDB\",\r\n            description: \"Using Node.js and MongoDB for the first time was not an easy task. However, by completing it, I managed to create an agenda, storing different events, with information about them, editing and deleting them.\",\r\n            imgUrl: dbpic,\r\n        },\r\n    ]\r\n\r\n    const projectsMedia = [\r\n        {\r\n            title: \"bla\",\r\n            description: \"bla\",\r\n            // imgUrl: single100suffix.png,\r\n        },\r\n        {\r\n            title: \"blaa\",\r\n            description: \"blaa\",\r\n            // imgUrl: progImg2,\r\n        },\r\n        {\r\n            title: \"hihi\",\r\n            description: \"hihi\",\r\n            // imgUrl: progImg3,\r\n        },]\r\n\r\n        const projectsUX = [\r\n            {\r\n                title: \"bla\",\r\n                description: \"bla\",\r\n                // imgUrl: single100suffix.png,\r\n            },\r\n            {\r\n                title: \"blaa\",\r\n                description: \"blaa\",\r\n                // imgUrl: progImg2,\r\n            },\r\n            {\r\n                title: \"hihi\",\r\n                description: \"hihi\",\r\n                // imgUrl: progImg3,\r\n            },]\r\n\r\n    return (\r\n        <section className=\"project\" id=\"projects\">\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h2>My Projects</h2>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n                            Here you can see some of the work I have done for the semester.  </p>\r\n                        <Tab.Container id=\"projects-tabs\" defaultActiveKey='first'>\r\n                        <Nav variant=\"pills\" id=\"pills-tab\">\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey='first'>Web Development</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey='second'>UX Design</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey='third' >Media Production</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <TabContent>\r\n                            <TabPane eventKey='first'>\r\n                                <Row>\r\n                                    {\r\n                                        projectsProg.map((project, index) => {\r\n                                            return (\r\n                                                <ProjectCard \r\n                                                  key={index}\r\n                                                   {...project}\r\n                                                   />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane eventKey='second'>\r\n                            <Row>\r\n                                    {\r\n                                        projectsUX.map((project, index) => {\r\n                                            return (\r\n                                                <ProjectCard \r\n                                                  key={index}\r\n                                                   {...project}\r\n                                                   />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Row>\r\n                            </TabPane>\r\n                            <TabPane eventKey='third'> <Row>\r\n                                    {\r\n                                        projectsMedia.map((project, index) => {\r\n                                            return (\r\n                                                <ProjectCard \r\n                                                  key={index}\r\n                                                   {...project}\r\n                                                   />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Row></TabPane>\r\n                        </TabContent>\r\n                        </Tab.Container>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\n// exporting the projects component\r\nexport default Projects"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}